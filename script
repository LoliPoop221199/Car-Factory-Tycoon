local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Player = Players.LocalPlayer
local Factory = tostring(Player.Team)

local PL
for _, v in pairs(Workspace.Tycoons[Factory].Model.Lines:GetChildren()) do
    if v.Name ~= "Exclusive" then
        PL = v
    end
end

local wor
getgenv().Fill = false
getgenv().CC = false
getgenv().AutoSell = false

local Window = Rayfield:CreateWindow({
    Name = "Car Factory Tycoon",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "created by lol1k.xyz  (discord)",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "CFTConfig",
        FileName = "Settings"
    },
    Discord = {Enabled = false},
    KeySystem = false
})

local AutoTab = Window:CreateTab("Automation", 4483362458)

local ConveyorToggles = {}

AutoTab:CreateButton({
    Name = "Toggle All Conveyors",
    Callback = function()
        local allOn = true
        for i = 1, 8 do
            if not getgenv()["Conveyor"..i] then
                allOn = false
                break
            end
        end
        
        local newState = not allOn
        for i = 1, 8 do
            getgenv()["Conveyor"..i] = newState
            if ConveyorToggles[i] then
                ConveyorToggles[i]:Set(newState)
            end
        end
    end
})

AutoTab:CreateSection("Conveyor Selection")

for i = 1, 8 do
    ConveyorToggles[i] = AutoTab:CreateToggle({
        Name = "Conveyor "..i,
        CurrentValue = false,
        Flag = "Conveyor"..i,
        Callback = function(Value)
            getgenv()["Conveyor"..i] = Value
        end
    })
end

AutoTab:CreateSlider({
    Name = "Workers",
    Range = {0, 5},
    Increment = 1,
    Suffix = "workers",
    CurrentValue = 0,
    Flag = "Workers",
    Callback = function(Value)
        wor = Value
    end
})

AutoTab:CreateToggle({
    Name = "Auto Fill Materials",
    CurrentValue = false,
    Flag = "AutoFill",
    Callback = function(Value)
        getgenv().Fill = Value
        if Value then
            coroutine.wrap(function()
                while getgenv().Fill do
                    pcall(function()
                        ReplicatedStorage.Packages.Knit.Services.MaterialService.RF.Collect:InvokeServer('Glass')
                        ReplicatedStorage.Packages.Knit.Services.MaterialService.RF.Collect:InvokeServer('Metal')
                        for i = 1, 8 do
                            if getgenv()["Conveyor"..i] then
                                local PLR = 'Conveyor'..i
                                if PL and PL.Parent and PL.Parent[PLR] then
                                    ReplicatedStorage.Packages.Knit.Services.MaterialService.RF.Drop:InvokeServer(PL.Parent[PLR])
                                end
                            end
                        end
                    end)
                    task.wait(0.1)
                end
            end)()
        end
    end
})

AutoTab:CreateToggle({
    Name = "Auto Create Cars",
    CurrentValue = false,
    Flag = "AutoCreate",
    Callback = function(Value)
        getgenv().CC = Value
        if Value and getgenv().AutoSell then
            coroutine.wrap(function()
                while getgenv().CC and getgenv().AutoSell do
                    task.wait(3)
                    pcall(function()
                        for i = 1, 8 do
                            if getgenv()["Conveyor"..i] then
                                local linha = 'Conveyor'..i
                                for j = wor, 4 do
                                    ReplicatedStorage.Packages.Knit.Services.TycoonService.RF.SpawnCarSegment:InvokeServer(linha)
                                end
                                task.wait(1)
                                for j = 1, 4 do
                                    ReplicatedStorage.Packages.Knit.Services.MaterialService.RF.CollectWheel:InvokeServer(linha)
                                    ReplicatedStorage.Packages.Knit.Services.MaterialService.RE.PlaceWheel:FireServer(linha)
                                end
                            end
                        end
                    end)
                end
            end)()
        end
    end
})

AutoTab:CreateToggle({
    Name = "Auto Sell Cars",
    CurrentValue = false,
    Flag = "AutoSell",
    Callback = function(Value)
        getgenv().AutoSell = Value
        if Value then
            coroutine.wrap(function()
                while getgenv().AutoSell do
                    task.wait(1)
                    pcall(function()
                        for _, v in pairs(Workspace.Tycoons[Factory].Model.NPCs:GetChildren()) do
                            ReplicatedStorage.Packages.Knit.Services.TycoonService.RF.AcceptBid:InvokeServer(v, math.random(1, 3))
                        end
                    end)
                end
            end)()
        end
    end
})

Rayfield:LoadConfiguration()
